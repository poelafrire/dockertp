$ sudo docker build -t wood/tp .
[+] Building 11.0s (5/5) FINISHED                                                                                                                                                                                             docker:default
 => [internal] load build definition from dockerfile                                                                                                                                                                                    0.1s
 => => transferring dockerfile: 186B                                                                                                                                                                                                    0.0s
 => [internal] load metadata for docker.io/library/postgres:17.2-alpine                                                                                                                                                                 1.5s
 => [internal] load .dockerignore                                                                                                                                                                                                       0.1s
 => => transferring context: 2B                                                                                                                                                                                                         0.0s
 => [1/1] FROM docker.io/library/postgres:17.2-alpine@sha256:7e5df973a74872482e320dcbdeb055e178d6f42de0558b083892c50cda833c96                                                                                                           9.1s
 => => resolve docker.io/library/postgres:17.2-alpine@sha256:7e5df973a74872482e320dcbdeb055e178d6f42de0558b083892c50cda833c96                                                                                                           0.1s
 => => sha256:7e5df973a74872482e320dcbdeb055e178d6f42de0558b083892c50cda833c96 10.29kB / 10.29kB                                                                                                                                        0.0s
 => => sha256:5d706d5aa3ad311722f373fdc09e6a22b454bec70d34d9786383983fd83c5e46 2.87kB / 2.87kB                                                                                                                                          0.0s
 => => sha256:2bf60600670fa512beeded60a7abe589fedd3fb23bd7ffaa5e5ed5d77488eda4 8.77kB / 8.77kB                                                                                                                                          0.0s
 => => sha256:655763f76ff2e68c16d167a37d4cfc36045bd629c0c00d9ae63227b02e3b6eb2 982B / 982B                                                                                                                                              0.5s
 => => sha256:1f3e46996e2966e4faa5846e56e76e3748b7315e2ded61476c24403d592134f0 3.64MB / 3.64MB                                                                                                                                          0.6s
 => => sha256:e63043639b3e320b0f7e9bcaace198449d0cca16e604ba907d66c0fd8b70f109 1.12MB / 1.12MB                                                                                                                                          0.4s
 => => sha256:4d216e15bb89429a90aa5e4fdceae5080cb885139093ada81c9348a8c10be50d 116B / 116B                                                                                                                                              0.7s
 => => sha256:4814e8dd2bb0d6c15c6e9e1ab62d2b1bbb2e07b8357fd893eff4f1fa2272edbf 105.80MB / 105.80MB                                                                                                                                      5.9s
 => => extracting sha256:1f3e46996e2966e4faa5846e56e76e3748b7315e2ded61476c24403d592134f0                                                                                                                                               0.1s
 => => sha256:84625ef528bf2cd5f7b9bab8ec584f2cf0163ea3314ed3999919798779d7acf6 9.88kB / 9.88kB                                                                                                                                          0.8s
 => => sha256:07f3d56093544726a00a4fe5a32fe4860ff46617e48336fbfb7d941c7f7947ad 128B / 128B                                                                                                                                              0.9s
 => => extracting sha256:655763f76ff2e68c16d167a37d4cfc36045bd629c0c00d9ae63227b02e3b6eb2                                                                                                                                               0.0s
 => => extracting sha256:e63043639b3e320b0f7e9bcaace198449d0cca16e604ba907d66c0fd8b70f109                                                                                                                                               0.0s
 => => sha256:28bb078c5f92f512c496ec6b7a520ae30b7751df46af2391aec17d2f8724dfe0 170B / 170B                                                                                                                                              1.0s
 => => extracting sha256:4d216e15bb89429a90aa5e4fdceae5080cb885139093ada81c9348a8c10be50d                                                                                                                                               0.0s
 => => sha256:6ab64bc3e7b1db07b57f8490f6a46ef612961dd5c575fea23ca0822385e9ef8a 5.41kB / 5.41kB                                                                                                                                          1.1s
 => => sha256:a2220bc1b38922e28b3b9e939bf81c6d5cf53b8247d16959a7930e5ab498baaa 183B / 183B                                                                                                                                              1.1s
 => => extracting sha256:4814e8dd2bb0d6c15c6e9e1ab62d2b1bbb2e07b8357fd893eff4f1fa2272edbf                                                                                                                                               2.3s
 => => extracting sha256:84625ef528bf2cd5f7b9bab8ec584f2cf0163ea3314ed3999919798779d7acf6                                                                                                                                               0.0s
 => => extracting sha256:07f3d56093544726a00a4fe5a32fe4860ff46617e48336fbfb7d941c7f7947ad                                                                                                                                               0.0s
 => => extracting sha256:28bb078c5f92f512c496ec6b7a520ae30b7751df46af2391aec17d2f8724dfe0                                                                                                                                               0.0s
 => => extracting sha256:6ab64bc3e7b1db07b57f8490f6a46ef612961dd5c575fea23ca0822385e9ef8a                                                                                                                                               0.0s
 => => extracting sha256:a2220bc1b38922e28b3b9e939bf81c6d5cf53b8247d16959a7930e5ab498baaa                                                                                                                                               0.0s
 => exporting to image                                                                                                                                                                                                                  0.0s
 => => exporting layers                                                                                                                                                                                                                 0.0s
 => => writing image sha256:9f60bd0c3edae3de04bd248bd269cf2744dfca16e3329d4049198fcac42c20d9                                                                                                                                            0.0s
 => => naming to docker.io/wood/tp                                                                                                                                                                                                      0.0s

 1 warning found (use docker --debug to expand):
 - SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ENV "POSTGRES_PASSWORD") (line 3)



$ sudo docker run --name tp wood/tp
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "en_US.utf8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/postgresql/data ... ok
creating subdirectories ... ok
selecting dynamic shared memory implementation ... posix
selecting default "max_connections" ... 100
selecting default "shared_buffers" ... 128MB
selecting default time zone ... UTC
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... sh: locale: not found
2025-10-22 08:16:31.823 UTC [35] WARNING:  no usable system locales were found
ok
syncing data to disk ... initdb: warning: enabling "trust" authentication for local connections
initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
ok


Success. You can now start the database server using:

    pg_ctl -D /var/lib/postgresql/data -l logfile start

waiting for server to start....2025-10-22 08:16:40.423 UTC [41] LOG:  starting PostgreSQL 17.2 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
2025-10-22 08:16:40.427 UTC [41] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2025-10-22 08:16:40.437 UTC [44] LOG:  database system was shut down at 2025-10-22 08:16:32 UTC
2025-10-22 08:16:40.447 UTC [41] LOG:  database system is ready to accept connections
 done
server started
CREATE DATABASE


/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*

waiting for server to shut down....2025-10-22 08:16:40.601 UTC [41] LOG:  received fast shutdown request
2025-10-22 08:16:40.604 UTC [41] LOG:  aborting any active transactions
2025-10-22 08:16:40.608 UTC [41] LOG:  background worker "logical replication launcher" (PID 47) exited with exit code 1
2025-10-22 08:16:40.609 UTC [42] LOG:  shutting down
2025-10-22 08:16:40.612 UTC [42] LOG:  checkpoint starting: shutdown immediate
2025-10-22 08:16:41.504 UTC [42] LOG:  checkpoint complete: wrote 924 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.062 s, sync=0.812 s, total=0.896 s; sync files=301, longest=0.009 s, average=0.003 s; distance=4250 kB, estimate=4250 kB; lsn=0/1911658, redo lsn=0/1911658
2025-10-22 08:16:41.514 UTC [41] LOG:  database system is shut down
 done
server stopped

PostgreSQL init process complete; ready for start up.

2025-10-22 08:16:41.644 UTC [1] LOG:  starting PostgreSQL 17.2 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
2025-10-22 08:16:41.645 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
2025-10-22 08:16:41.645 UTC [1] LOG:  listening on IPv6 address "::", port 5432
2025-10-22 08:16:41.652 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2025-10-22 08:16:41.662 UTC [57] LOG:  database system was shut down at 2025-10-22 08:16:41 UTC
2025-10-22 08:16:41.671 UTC [1] LOG:  database system is ready to accept connections
^C2025-10-22 08:29:49.462 UTC [1] LOG:  received fast shutdown request
2025-10-22 08:29:49.465 UTC [1] LOG:  aborting any active transactions
2025-10-22 08:29:49.468 UTC [1] LOG:  background worker "logical replication launcher" (PID 60) exited with exit code 1
2025-10-22 08:29:49.468 UTC [55] LOG:  shutting down
2025-10-22 08:29:49.472 UTC [55] LOG:  checkpoint starting: shutdown immediate
2025-10-22 08:29:49.490 UTC [55] LOG:  checkpoint complete: wrote 0 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.001 s, sync=0.001 s, total=0.022 s; sync files=0, longest=0.000 s, average=0.000 s; distance=0 kB, estimate=242 kB; lsn=0/1954ED8, redo lsn=0/1954ED8
2025-10-22 08:29:49.497 UTC [1] LOG:  database system is shut down



$ sudo docker rm 59a391c07957df2a22b19e3e0a7486af601a583f86f18698a9597f2259b0ea27
59a391c07957df2a22b19e3e0a7486af601a583f86f18698a9597f2259b0ea27



$ sudo docker network create app-network
66764330f0b55658d8520d45765244690007db64b9db86b9f4724bda59372ffa

Question 1-1:
"1-1 For which reason is it better to run the container with a flag -e to give the environment variables rather than put them directly in the Dockerfile?"
→it's not secure if anyone that could access the Dockerfile could find the password


$ sudo docker run --name tp wood/tp --network app-network adminer
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "en_US.utf8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/postgresql/data ... ok
creating subdirectories ... ok
selecting dynamic shared memory implementation ... posix
selecting default "max_connections" ... 100
selecting default "shared_buffers" ... 128MB
selecting default time zone ... UTC
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... sh: locale: not found
2025-10-22 08:38:36.421 UTC [35] WARNING:  no usable system locales were found
ok
syncing data to disk ... ok


Success. You can now start the database server using:

    pg_ctl -D /var/lib/postgresql/data -l logfile start

initdb: warning: enabling "trust" authentication for local connections
initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
2025-10-22 08:38:39.699 GMT [37] FATAL:  --network requires a value


$ pg_ctl -D /var/lib/postgresql/data -l logfile start
bash: pg_ctl: commande inconnue...
Les paquets fournissant ces fichiers sont :
'postgresql-server'
'postgresql15-server'


$ sudo docker run -p "8090:8080" --net=app-network --name=adminer -d adminer
[sudo] Mot de passe de jameswoods : 
Unable to find image 'adminer:latest' locally
latest: Pulling from library/adminer
2d35ebdb57d9: Already exists 
bb2f8e296f16: Pull complete 
83a14574d9b4: Pull complete 
00a5ec08747e: Pull complete 
6901834d8559: Pull complete 
d50bd3180ce9: Pull complete 
cff98099a8db: Pull complete 
5b7dc8240588: Pull complete 
5da04ac49062: Pull complete 
22b8cf85bbba: Pull complete 
92d173a1cad8: Pull complete 
dd3296dcff29: Pull complete 
4f4fb700ef54: Pull complete 
e22763e65c8d: Pull complete 
4e220788f6b2: Pull complete 
385c4c931423: Pull complete 
abc85f6a070c: Pull complete 
Digest: sha256:bf7ea9bd62afd2d34045b4098ad68feb4a08ad9f75f28dc5d9b7d6d84d63005c
Status: Downloaded newer image for adminer:latest
d53da5e16989df9e4155f5f5d5f4019ec348c4415058acff0ad043d011b50fe4



